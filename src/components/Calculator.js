/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { LoopOnce } from 'three'


export default function Model({ ...props }) {
  

  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/calculator.gltf')
  const { actions } = useAnimations(animations, group)
  // console.log(actions)

  // CALCULATOR FUNCTIONS
  const [currentFirstOperand, setCurrentFirstOperand] = useState('')
  const [currentSecondOperand, setCurrentSecondOperand] = useState()
  const [currentOperator, setCurrentOperator] = useState()
  const [currentSolution, setCurrentSolution] = useState()


  const evaluateSolution = () => {
    let solution = eval(Number(currentFirstOperand) + currentOperator + Number(currentSecondOperand))

     return solution
  }

  const solution = evaluateSolution()



  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CalculatorBody" scale={[0.52, 0.96, 0.12]}>
          <mesh name="Cube" geometry={nodes.Cube.geometry} material={materials.calculatorBody} />
          <mesh name="Cube_1" geometry={nodes.Cube_1.geometry} material={materials.text} />
        </group>
        <group name="onOffButton" scale={[0.52, 0.96, 0.12]}
          onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
          onPointerLeave={() => {document.body.style.cursor = 'default'}}
          onClick={(() => {
                  const onOffButton = actions.onOffButton
                  onOffButton.play()
                  onOffButton.setLoop(LoopOnce, 1)
                  setTimeout(() => {onOffButton.stop()}, 1000)
                })}>
          <mesh name="Cube001" geometry={nodes.Cube001.geometry} material={materials.onOffButton} />
          <mesh name="Cube001_1" geometry={nodes.Cube001_1.geometry} material={materials.buttonText} />
        </group>
        <group name="CEButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                const ceButton = actions.ceButton
                ceButton.play()
                ceButton.setLoop(LoopOnce, 1)
                setTimeout(() => {ceButton.stop()}, 1000)
              })}>
          <mesh name="Cube002" geometry={nodes.Cube002.geometry} material={materials.Material} />
          <mesh name="Cube002_1" geometry={nodes.Cube002_1.geometry} material={materials.buttonText} />
        </group>
        <group name="plusMinusButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                const plusDashMinusButton = actions.plusDashMinusButton
                plusDashMinusButton.play()
                plusDashMinusButton.setLoop(LoopOnce, 1)
                setTimeout(() => {plusDashMinusButton.stop()}, 1000)
              })}>
          <mesh name="Cube003" geometry={nodes.Cube003.geometry} material={materials.Material} />
          <mesh name="Cube003_1" geometry={nodes.Cube003_1.geometry} material={materials.buttonText} />
        </group>
        <group name="squareRootButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                const sqRootButton = actions.sqRootButton
                sqRootButton.play()
                sqRootButton.setLoop(LoopOnce, 1)
                setTimeout(() => {sqRootButton.stop()}, 1000)
              })}>
          <mesh name="Cube004" geometry={nodes.Cube004.geometry} material={materials.Material} />
          <mesh name="Cube004_1" geometry={nodes.Cube004_1.geometry} material={materials.buttonText} />
        </group>
        <group name="percentageButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                const modulusButton = actions.modulusButton
                modulusButton.play()
                modulusButton.setLoop(LoopOnce, 1)
                setTimeout(() => {modulusButton.stop()}, 1000)
              })}>
          <mesh name="Cube005" geometry={nodes.Cube005.geometry} material={materials.Material} />
          <mesh name="Cube005_1" geometry={nodes.Cube005_1.geometry} material={materials.buttonText} />
        </group>
        <group name="divisionButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                setCurrentOperator('/')
                const divisionButton = actions.divisionButton
                divisionButton.play()
                divisionButton.setLoop(LoopOnce, 1)
                setTimeout(() => {divisionButton.stop()}, 1000)
              })}>
          <mesh name="Cube006" geometry={nodes.Cube006.geometry} material={materials.Material} />
          <mesh name="Cube006_1" geometry={nodes.Cube006_1.geometry} material={materials.buttonText} />
        </group>
        <group name="mPlusButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                const mPlusButton = actions.mPlusButton
                mPlusButton.play()
                mPlusButton.setLoop(LoopOnce, 1)
                setTimeout(() => {mPlusButton.stop()}, 1000)
              })}>
          <mesh name="Cube007" geometry={nodes.Cube007.geometry} material={materials.Material} />
          <mesh name="Cube007_1" geometry={nodes.Cube007_1.geometry} material={materials.buttonText} />
        </group>
        <group name="mMinusButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                const mMinusButton = actions.mMinusButton
                mMinusButton.play()
                mMinusButton.setLoop(LoopOnce, 1)
                setTimeout(() => {mMinusButton.stop()}, 1000)
              })}>
          <mesh name="Cube008" geometry={nodes.Cube008.geometry} material={materials.Material} />
          <mesh name="Cube008_1" geometry={nodes.Cube008_1.geometry} material={materials.buttonText} />
        </group>
        <group name="mRCButton" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                const mRCButton = actions.mRCButton
                mRCButton.play()
                mRCButton.setLoop(LoopOnce, 1)
                setTimeout(() => {mRCButton.stop()}, 1000)
              })}>
          <mesh name="Cube009" geometry={nodes.Cube009.geometry} material={materials.Material} />
          <mesh name="Cube009_1" geometry={nodes.Cube009_1.geometry} material={materials.buttonText} />
        </group>
        <group name="7Button" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '7')
                    } else {
                      setCurrentSecondOperand('7')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '7')
                  }
                } else {
                  setCurrentFirstOperand('7')
                }
                const button7 = actions.button7
                button7.play()
                button7.setLoop(LoopOnce, 1)
                setTimeout(() => {button7.stop()}, 1000)
              })}>
          <mesh name="Cube010" geometry={nodes.Cube010.geometry} material={materials.Material} />
          <mesh name="Cube010_1" geometry={nodes.Cube010_1.geometry} material={materials.buttonText} />
        </group>
        <group name="8Button" scale={[0.52, 0.96, 0.12]}
              onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
              onPointerLeave={() => {document.body.style.cursor = 'default'}} 
              onClick={(() => {
                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '8')
                    } else {
                      setCurrentSecondOperand('8')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '8')
                  }
                } else {
                  setCurrentFirstOperand('8')
                }
                const button8 = actions.button8
                button8.play()
                button8.setLoop(LoopOnce, 1)
                setTimeout(() => {button8.stop()}, 1000)
              })}>
          <mesh name="Cube011" geometry={nodes.Cube011.geometry} material={materials.Material} />
          <mesh name="Cube011_1" geometry={nodes.Cube011_1.geometry} material={materials.buttonText} />
        </group>
        <group name="9Button" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '9')
                    } else {
                      setCurrentSecondOperand('9')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '9')
                  }
                } else {
                  setCurrentFirstOperand('9')
                }
                const button9 = actions.button9
                button9.play()
                button9.setLoop(LoopOnce, 1)
                setTimeout(() => {button9.stop()}, 1000)
               })}>
          <mesh name="Cube012" geometry={nodes.Cube012.geometry} material={materials.Material} />
          <mesh name="Cube012_1" geometry={nodes.Cube012_1.geometry} material={materials.buttonText} />
        </group>
        <group name="multiplicationButton" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                setCurrentOperator('*')
                const multiplicationButton = actions.multiplicationButton
                multiplicationButton.play()
                multiplicationButton.setLoop(LoopOnce, 1)
                setTimeout(() => {multiplicationButton.stop()}, 1000)
               })}>
          <mesh name="Cube013" geometry={nodes.Cube013.geometry} material={materials.Material} />
          <mesh name="Cube013_1" geometry={nodes.Cube013_1.geometry} material={materials.buttonText} />
        </group>
        <group name="substractionButton" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                setCurrentOperator('-')
                const minusButton = actions.minusButton
                minusButton.play()
                minusButton.setLoop(LoopOnce, 1)
                setTimeout(() => {minusButton.stop()}, 1000)
               })}>
          <mesh name="Cube014" geometry={nodes.Cube014.geometry} material={materials.Material} />
          <mesh name="Cube014_1" geometry={nodes.Cube014_1.geometry} material={materials.buttonText} />
        </group>
        <group name="6Button" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '6')
                    } else {
                      setCurrentSecondOperand('6')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '6')
                  }
                } else {
                  setCurrentFirstOperand('6')
                }
                const button6 = actions.button6
                button6.play()
                button6.setLoop(LoopOnce, 1)
                setTimeout(() => {button6.stop()}, 1000)
               })}>
          <mesh name="Cube015" geometry={nodes.Cube015.geometry} material={materials.Material} />
          <mesh name="Cube015_1" geometry={nodes.Cube015_1.geometry} material={materials.buttonText} />
        </group>
        <group name="5Button" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {

                 if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '5')
                    } else {
                      setCurrentSecondOperand('5')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '5')
                  }
                } else {
                  setCurrentFirstOperand('5')
                }
                const button5 = actions.button5
                button5.play()
                button5.setLoop(LoopOnce, 1)
                setTimeout(() => {button5.stop()}, 1000)
               })}>
          <mesh name="Cube016" geometry={nodes.Cube016.geometry} material={materials.Material} />
          <mesh name="Cube016_1" geometry={nodes.Cube016_1.geometry} material={materials.buttonText} />
        </group>
        <group name="4Button" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {

                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '4')
                    } else {
                      setCurrentSecondOperand('4')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '4')
                  }
                } else {
                  setCurrentFirstOperand('4')
                }

                const button4 = actions.button4
                button4.play()
                button4.setLoop(LoopOnce, 1)
                setTimeout(() => {button4.stop()}, 1000)
               })}>
          <mesh name="Cube017" geometry={nodes.Cube017.geometry} material={materials.Material} />
          <mesh name="Cube017_1" geometry={nodes.Cube017_1.geometry} material={materials.buttonText} />
        </group>
        <group name="1Button" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                
                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '1')
                    } else {
                      setCurrentSecondOperand('1')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '1')
                  }
                } else {
                  setCurrentFirstOperand('1')
                }

                console.log(currentFirstOperand)
                const button1 = actions.button1
                button1.play()
                button1.setLoop(LoopOnce, 1)
                setTimeout(() => {button1.stop()}, 1000)
               })}>
          <mesh name="Cube018" geometry={nodes.Cube018.geometry} material={materials.Material} />
          <mesh name="Cube018_1" geometry={nodes.Cube018_1.geometry} material={materials.buttonText} />
        </group>
        <group name="2Button" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                
                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '2')
                    } else {
                      setCurrentSecondOperand('2')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '2')
                  }
                } else {
                  setCurrentFirstOperand('2')
                }
                
                const button2 = actions.button2
                button2.play()
                button2.setLoop(LoopOnce, 1)
                setTimeout(() => {button2.stop()}, 1000)
               })}>
          <mesh name="Cube019" geometry={nodes.Cube019.geometry} material={materials.Material} />
          <mesh name="Cube019_1" geometry={nodes.Cube019_1.geometry} material={materials.buttonText} />
        </group>
        <group name="3Button" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                if (currentFirstOperand) {
                  if(currentOperator){
                    if (currentSecondOperand){
                      setCurrentSecondOperand(currentSecondOperand + '3')
                    } else {
                      setCurrentSecondOperand('3')
                    }
                  } else {
                    setCurrentFirstOperand(currentFirstOperand + '3')
                  }
                } else {
                  setCurrentFirstOperand('3')
                }
                const button3 = actions.button3
                button3.play()
                button3.setLoop(LoopOnce, 1)
                setTimeout(() => {button3.stop()}, 1000)
               })}>
          <mesh name="Cube020" geometry={nodes.Cube020.geometry} material={materials.Material} />
          <mesh name="Cube020_1" geometry={nodes.Cube020_1.geometry} material={materials.buttonText} />
        </group>
        <group name="additionButton" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                setCurrentOperator('+')
                console.log(currentOperator)
                const plusButton = actions.plusButton
                plusButton.play()
                plusButton.setLoop(LoopOnce, 1)
                setTimeout(() => {plusButton.stop()}, 1000)
               })}>
          <mesh name="Cube021" geometry={nodes.Cube021.geometry} material={materials.Material} />
          <mesh name="Cube021_1" geometry={nodes.Cube021_1.geometry} material={materials.buttonText} />
        </group>
        <group name="equalsButton" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                setCurrentFirstOperand(undefined)
                setCurrentSecondOperand(undefined)
                setCurrentOperator(undefined)

                console.log(solution)
                const equalsButton = actions.equalsButton
                equalsButton.play()
                equalsButton.setLoop(LoopOnce, 1)
                setTimeout(() => {equalsButton.stop()}, 1000)
               })}>
          <mesh name="Cube022" geometry={nodes.Cube022.geometry} material={materials.Material} />
          <mesh name="Cube022_1" geometry={nodes.Cube022_1.geometry} material={materials.buttonText} />
        </group>
        <group name="decimalButton" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                const decimalButton = actions.decimalButton
                decimalButton.play()
                decimalButton.setLoop(LoopOnce, 1)
                setTimeout(() => {decimalButton.stop()}, 1000)
               })}>
          <mesh name="Cube023" geometry={nodes.Cube023.geometry} material={materials.Material} />
          <mesh name="Cube023_1" geometry={nodes.Cube023_1.geometry} material={materials.buttonText} />
        </group>
        <group name="Cube024" scale={[0.52, 0.96, 0.12]}
               onPointerEnter={() => {document.body.style.cursor = 'pointer'}}
               onPointerLeave={() => {document.body.style.cursor = 'default'}} 
               onClick={(() => {
                const button0 = actions.button0
                button0.play()
                button0.setLoop(LoopOnce, 1)
                setTimeout(() => {button0.stop()}, 1000)
               })}>
          <mesh name="Cube024_1" geometry={nodes.Cube024_1.geometry} material={materials.Material} />
          <mesh name="Cube024_2" geometry={nodes.Cube024_2.geometry} material={materials.buttonText} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/calculator.gltf')
